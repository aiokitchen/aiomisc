# Translations template for aiomisc.
# Copyright (C) 2021
# This file is distributed under the same license as the aiomisc project.
# Dmitry Orlov <me@mosquito.su>, 2022.
msgid ""
msgstr ""
"Project-Id-Version:  14\n"
"Report-Msgid-Bugs-To: me@mosquito.su\n"
"POT-Creation-Date: 2022-12-29 11:36+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dmitry Orlov <me@mosquito.su>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/process_pool.rst:2
msgid "``ProcessPoolExecutor``"
msgstr ""

#: ../../source/process_pool.rst:4
msgid "This is a simple process pool executor implementation."
msgstr "Это простая реализация пула процессов."

#: ../../source/process_pool.rst:6
msgid "Example:"
msgstr "Пример:"

#: ../../source/process_pool.rst:8
msgid ""
"import asyncio\n"
"import time\n"
"import os\n"
"from aiomisc import ProcessPoolExecutor\n"
"\n"
"def process_inner():\n"
"    for _ in range(10):\n"
"        print(os.getpid())\n"
"        time.sleep(1)\n"
"\n"
"    return os.getpid()\n"
"\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"process_pool = ProcessPoolExecutor(4)\n"
"\n"
"\n"
"async def main():\n"
"    print(\n"
"        await asyncio.gather(\n"
"            loop.run_in_executor(process_pool, process_inner),\n"
"            loop.run_in_executor(process_pool, process_inner),\n"
"            loop.run_in_executor(process_pool, process_inner),\n"
"            loop.run_in_executor(process_pool, process_inner),\n"
"        )\n"
"    )\n"
"\n"
"loop.run_until_complete(main())"
msgstr ""
