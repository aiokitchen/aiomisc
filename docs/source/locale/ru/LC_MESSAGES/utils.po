# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Dmitry Orlov
# This file is distributed under the same license as the aiomisc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiomisc 11.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-01 00:23+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/utils.rst:2
msgid "Utilities"
msgstr "Утилиты"

#: ../../source/utils.rst:5
msgid "Select"
msgstr "Select"

#: ../../source/utils.rst:7
msgid ""
"In some cases you should wait only one of multiple tasks. ``select`` "
"waits first passed awaitable object and returns list of results."
msgstr ""
"Иногда требуется дождаться выполнения хотя-бы одной задачи из многих. ``select`` "
"ожидает выполнения одной из переданных сопрограмм (или объектов с реализованным методом `__await__`) "
"И возвращает список результатов."

#: ../../source/utils.rst:45
msgid ""
"When you don't want to cancel pending tasks pass ``cancel=False`` "
"argument. In this case you have to handle task completion manually or get"
" warnings."
msgstr ""
"В случае если вы не желаете отменять запущенные задачии передайте аргумент ``cancel=False``. "
"Но в этом случае вам придется разобраться с завершением или отменой самостоятельон иначе "
"будет предупреждение от интерпретатора."

#: ../../source/utils.rst:50
msgid "cancel_tasks"
msgstr "cancel_tasks"

#: ../../source/utils.rst:52
msgid "All passed tasks will be cancelled and task will be returned:"
msgstr "Все переданные задачи будут отменены, при это функция возвращает `asyncio.Task`:"

#: ../../source/utils.rst:74
msgid "awaitable"
msgstr "awaitable"

#: ../../source/utils.rst:76
msgid ""
"Decorator wraps function and returns a function which returns awaitable "
"object. In case than a function returns a future, the original future "
"will be returned. In case then the function returns a coroutine, the "
"original coroutine will be returned. In case than function returns non-"
"awaitable object, it's will be wrapped to a new coroutine which just "
"returns this object. It's useful when you don't want to check function "
"result before use it in ``await`` expression."
msgstr ""
"Оборачивает функции таким образом что они всегда возвращают сопрограмму. "
"Если функция возвращает объект `asyncio.Future`, будет возвращен оригинальный объект. "
"Если функция итак возвращает сопрограмму, или объект с реализованным методом `__await__` "
"будет возвращен оригинальный объект."
"В противном случае возвращаемый объект будет тобернут в сопрограмму, которая вернет этот объект."
"Это полезно если не хочется проверять возврат из функции перед тем как использовать ее в `await` выражении."

#: ../../source/utils.rst:100
msgid "Bind socket"
msgstr "Bind socket"

#: ../../source/utils.rst:102
msgid ""
"Bind socket and set ``setblocking(False)`` for just created socket. This "
"detects ``address`` format and select socket family automatically."
msgstr ""
"Создает сокет и устанавливает для него необходимые для работы с asyncio флаги "
"(вроде ``setblocking(False)``). Так-же определяет семейство адресов "
"(IPv6/IPv4) из формата аргумента ``address`` автоматически."

#: ../../source/utils.rst:117
msgid "Periodic callback"
msgstr "Periodic callback"

#: ../../source/utils.rst:119
msgid ""
"Runs coroutine function periodically with an optional delay of the first "
"execution."
msgstr ""
"Запускает сопрограммы переодически с заданным периодом времени, "
"и необязательной задержкой при первом запуске."

#: ../../source/utils.rst:144
msgid "Cron callback"
msgstr "Cron callback"

#: ../../source/utils.rst:146
msgid "Runs coroutine function with cron scheduling execution."
msgstr "Запускает сопрограммы переодически, как-будто с помощью cron."

